server:
  address: 0.0.0.0
  port: ${PORT:8080}
# Spring config
spring:
  profiles:
    active: ${ACTIVE_PROFILE:dev}
  application:
    name: im-auth-server
  # Session storage
  data:
    redis:
      host: ${REDIS_SESSION_STORAGE_HOST:localhost}
      port: ${REDIS_SESSION_STORAGE_PORT:6379}
      username:
      password:
  session:
    store-type: redis
    timeout: ${SESSION_TIMEOUT_IN_SECONDS:60}
  # Database connection
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/postgres}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: ${POSTGRES_DDL_AUTO:validate}
    show-sql: ${POSTGRES_SHOW_SQL:false}
    generate-ddl: ${POSTGRES_GENERATE_DDL:false}
  # SMTP server connection settings
  mail:
    username: ${SMTP_SERVER_USERNAME}
    password: ${SMTP_SERVER_PASSWORD}
    host: ${SMTP_SERVER_HOST:smtp.gmail.com}
    port: ${SMTP_SERVER_PORT:587}
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    # Enable config server integration
  cloud:
    config:
      enabled: ${CONFIG_CLIENT_ENABLE:false}
    # Enable discovery server integration
    gateway:
      discovery:
        locator:
          enabled: ${EUREKA_CLIENT_ENABLE:false}
          lower-case-service-id: true
# Discovery server connection
eureka:
  client:
    enabled: ${EUREKA_CLIENT_ENABLE:false}
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE:"http://localhost:8761/eureka"}
    register-with-eureka: ${EUREKA_CLIENT_ENABLE:false}
    fetch-registry: ${EUREKA_CLIENT_ENABLE:false}

# Logging level settings
logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}
    org.springframework.security: ${logging.level.root}
    org.indexmonitor: ${LOGGING_LEVEL_APP:INFO}
# Application settings
app:
  issuer_url: ${APP_ISSUER_URL:"${server.address}:${server.port}"}
  # CORS origin allowed list
  cors:
    origin:
      enable: ${APP_CORS_ORIGIN_ENABLE:false}
      list: ${APP_CORS_ORIGIN_LIST:*}
  # RSA key pare for JWT token signature
  security:
    jwt:
      keyID: ${APP_SECURITY_JWT_KEY_ID}
      publicKey: ${APP_SECURITY_JWT_PUBLIC_KEY}
      privateKey: ${APP_SECURITY_JWT_PRIVATE_KEY}
  # Email service settings
  email:
    enable: ${APP_EMAIL_ENABLE:true}
    confirmEmail:
      tokenTimeToLiveInSeconds: ${APP_EMAIL_CONFIRM_EMAIL_TOKEN_TIME_TO_LIVE_IN_SECONDS:3600}
    resetPassword:
      tokenTimeToLiveInSeconds: ${APP_EMAIL_RESET_PASSWORD_TOKEN_TIME_TO_LIVE_IN_SECONDS:3600}
    externalDomainAddress: ${APP_EMAIL_EXTERNAL_DOMAIN_ADDRESS:http://localhost:8080}
  data:
    seed:
      enable: ${APP_DATA_SEED_ENABLE:false}
      user:
        enable: ${APP_DATA_SEED_ENABLE:false}
        username: ${APP_DATA_SEED_USER_USERNAME}
        password: ${APP_DATA_SEED_USER_PASSWORD}
        givenName: ${APP_DATA_SEED_USER_GIVEN_NAME:user}
        familyName: ${APP_DATA_SEED_USER_FAMILY_NAME:user}
        email: ${APP_DATA_SEED_USER_EMAIL}
        recovery:
          question: Provide generated key.
      role:
        enable: ${APP_DATA_SEED_ENABLE:false}
        set: client-manager,scope-manager,user-manager,role-manager,authority-manager
      authority:
        enable: ${APP_DATA_SEED_ENABLE:false}
        set: create,read,update,delete
      client:
        enable: ${APP_DATA_SEED_ENABLE:false}
        clientId: ${APP_DATA_SEED_UI_CLIENT_ID:angular_ui_none}
        name: Indexmonitor Authorization Client
        description: The Indexmonitor Authorization Client is built on top of Angular 15 and provides a clean user interface for the Indexmonitor Authorization Server project. It utilizes Angular Material library and Bootstrap 5.0 for the grid system, as flex-layout is not supported in Angular 15. It also uses ngrx for state management.
        authenticationMethod: none
        grantType: authorization_code
        origin: ${APP_DATA_SEED_UI_CLIENT_ORIGIN:http://localhost:4200}
        redirectUris: ${app.data.seed.client.origin}/auth/callback
        scopes: openid,profile
      scope:
        enable: ${APP_DATA_SEED_ENABLE:false}
        set: openid,profile,email